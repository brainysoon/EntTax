<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enttax.dao.StaffMapper">
    <!--<cache type="com.strive.cms.cache.RedisCache"/>-->

    <resultMap id="BaseResultMap" type="Staff">
        <id column="SId" property="sId"/>
        <result column="SName" property="sName"/>
        <result column="SPassword" property="sPassword"/>
        <result column="SSalt" property="sSalt"/>
        <result column="SEmail" property="sEmail"/>
        <result column="SPhone" property="sPhone"/>
        <result column="SSex" property="sSex"/>
        <result column="SBirthday" property="sBirthday"/>
        <result column="SEnter" property="sEnter"/>
        <result column="SMark" property="sMark"/>
        <result column="SAddress" property="sAddress"/>
        <result column="SAvatar" property="sAvatar"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    DELETE FROM staff
    WHERE SId = #{sId}
  </delete>
    <delete id="deleteStaffRole" parameterType="java.lang.String">
        DELETE FROM staff_role
        WHERE SId = #{sId}
    </delete>

    <!--insert-->
    <insert id="insert" parameterType="Staff">
    INSERT INTO staff (SId, SName, SPassword, SSalt,
      SEmail, SPhone, SSex, SBirthday,
      SEnter, SMark, SAddress, SAvatar)
    VALUES (#{sId}, #{sName}, #{sPassword},#{sSalt},
      #{sEmail}, #{sPhone}, #{sSex}, #{sBirthday},
      #{sEnter}, #{sMark}, #{sAddress},
      #{sAvatar})
    </insert>

    <insert id="insertStaffAndRoleRelation" parameterType="String">
    INSERT INTO staff_role (SId, RId) VALUES (#{sId}, #{rId})
    </insert>

    <!--update-->
    <update id="updateByPrimaryKey" parameterType="Staff">
    UPDATE staff
    SET SName = #{sName},
      SPassword = #{sPassword},
      SSalt=#{sSalt},
      SEmail = #{sEmail},
      SPhone = #{sPhone},
      SSex = #{sSex},
      SBirthday = #{sBirthday},
      SEnter = #{sEnter},
      SMark = #{sMark},
      SAddress = #{sAddress},
      SAvatar = #{sAvatar}
    WHERE SId = #{sId}
  </update>

    <update id="updatePassword" parameterType="java.lang.String">
    UPDATE staff SET SPassword = #{newPassword},
    SSalt=#{sSalt}
    WHERE SId = #{sId}
  </update>

    <!--select-->
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT SId, SName, SPassword, SSalt, SEmail, SPhone, SSex, SBirthday, SEnter, SMark, SAddress,
    SAvatar
    FROM staff
    WHERE SId = #{sId}
  </select>

    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT SId, SName, SPassword, SSalt, SEmail, SPhone, SSex, SBirthday, SEnter, SMark, SAddress, SAvatar
    FROM staff
    WHERE SEmail= #{sEmail}
  </select>

    <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT SId, SName, SPassword, SSalt, SEmail, SPhone, SSex, SBirthday, SEnter, SMark, SAddress,SAvatar
    FROM staff
    WHERE SPhone = #{sPhone}
  </select>

    <select id="selectAll" resultMap="BaseResultMap">
    SELECT SId, SName, SPassword, SSalt, SEmail, SPhone, SSex, SBirthday, SEnter, SMark, SAddress, SAvatar
    FROM staff
  </select>

    <select id="selectAllStaffInfo" resultType="StaffInfo">
    SELECT s.SId,s.SName,s.SPhone,s.SEnter,s.SAvatar,r.RName,s.SEmail
     FROM staff s LEFT JOIN staff_role sr ON s.sid=sr.sid LEFT JOIN role r ON r.rid=sr.rid
     WHERE SMark >= 0
    </select>

    <select id="selectStaffRoleId" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT RId FROM staff_role WHERE SId=#{sId}
    </select>
</mapper>